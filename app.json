{
    "swagger": "2.0",
    "info": {
        "description": "Free Mentors is a service that help mentree to request free session with mentor",
        "version": "v1",
        "title": "Free Mentors APIs docs",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "mail@jajabenit.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/Jajabenit250/Free-Mentors/blob/develop/LICENCE.md"
        }
    },
    "host": "",
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "User",
            "description": "User Authentication API"
        },
        {
            "name": "Mentors",
            "description": "View all, View specific mentor"
        },
        {
            "name": "Sessions",
            "description": "Request Session, Accept, Reject, View, Create review, Delete"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create user account",
                "description": "Register a user before using the system",
                "operationId": "signup",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that's needed to create new account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account Created Successfully"
                    },
                    "409": {
                        "description": "User already exist"
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "signin user",
                "description": "",
                "operationId": "signin",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that's needed to login Into account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User Succesfully Login"
                    },
                    "409": {
                        "description": "Invalid Credentials"
                    }
                }
            }
        },
        "/sessions": {
            "post": {
                "tags": [
                    "Sessions"
                ],
                "summary": "User can request mentorship session",
                "description": "",
                "operationId": "create-session",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "type": "string",
                        "description": "The value to provide in the  header of API request"
                    },
                    {
                        "name": "Session details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sessions"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sessions created successfully"
                    },
                    "401": {
                        "description": "session already exist"
                    }
                }
            },
            "get": {
                "tags": [
                    "Sessions"
                ],
                "summary": "users can view all sessions",
                "description": "",
                "operationId": "get-sessions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "type": "string",
                        "description": "The value to provide in the  header of API request",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All sessions"
                    },
                    "403": {
                        "description": "User not allowed to perform action"
                    }
                }
            }
        },
        "/sessions/{id}/reject": {
            "patch": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Mentor can reject a session",
                "description": "Mentor is only allowed to reject session with given ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "Session Id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200: session successfully rejected"
                    },
                    "400": {
                        "description": "400 Error"
                    },
                    "401": {
                        "description": "401: authentication error"
                    }
                }
            }
        },"/sessions/{id}/accept": {
            "patch": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Mentor can accept a session",
                "description": "Mentor is only allowed to accept session with given ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "Session Id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200: session successfully accepted"
                    },
                    "400": {
                        "description": "400 Error"
                    },
                    "401": {
                        "description": "401: authentication error"
                    }
                }
            }
        },
        
        "/mentors": {
            "get": {
                "tags": [
                    "Mentors"
                ],
                "summary": "View mentors",
                "description": "User can view all mentors.",
                "operationId": "view-mentors",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "",
                        "in": "",
                        "type": "",
                        "description": "The value to provide in the  header of API request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200: User view all mentors list"
                    }
                }
            }
        },
        "/mentors/{id}": {
            "get": {
                "tags": [
                    "Mentors"
                ],
                "summary": "View specific Mentor",
                "description": "",
                "operationId": "view-specific-mentor",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "",
                        "in": "",
                        "type": "",
                        "description": "The value to provide in the  header of API request"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200: User view mentor profile"
                    },
                    "404": {
                        "description": "404: No mentor found with that Id"
                    }
                }
            }
        }
    },
    "definitions": {
        "signup": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "integer"
                },
                "occupation": {
                    "type": "string"
                },
                "expertise": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User Signup"
            }
        },
        "signin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User SignIn"
            }
        },
        "sessions": {
            "type": "object",
            "properties": {
                "menteeId": {
                    "type": "integer"
                },
                "mentorId": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "menteeEmail": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Session"
            }
        },
        "mentors": {
            "type": "object",
            "properties": {
                "mentor_id": {
                    "type": "integer"
                }
            },
            "xml": {
                "name": "Mentor"
            }
        }
    }
}
