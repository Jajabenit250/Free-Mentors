{
  "swagger": "2.0",
  "info": {
    "description": "Free Mentors is a platform where people (Mentee) to request free mentorship with mentors",
    "version": "1.0.0",
    "title": "Free Mentors Web Application",
    "termsOfService": "https://github.com/Jajabenit250/Free-Mentors",
    "contact": {
      "email": "mail@jajabenit.com"
    }
  },
  "host": "https://free-mentors-benit.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "API Endpoints",
      "description": "",
      "externalDocs": {
        "description": "",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Users",
      "description": ""
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This endpoint create a user",
        "operationId": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Signup",
            "description": "Required fields to create a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ]
      }
    },
    "/sessions/{id}/reject": {
      "patch": {
        "tags": ["Sessions"],
        "summary": "Mentor reject mentorship session request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "Change User to mentor"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "This request can not be rejected because was accepted before"
          },
          "404": {
            "description": "The given request session Id does not exists"
          },
          "409": {
            "description": "This request was made before"
          }
        },
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ]
      }
    },
    "/sessions/{id}/review": {
      "post": {
        "tags": ["Review"],
        "summary": "Mentee review mentor after mentorship session",
        "description": "",
        "operationId": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "Review",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created session object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Can not review session that was not accepted"
          },
          "404": {
            "description": "The given course ID does not exits"
          },
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [""],
        "summary": "View all users",
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/sessions/{id}/review": {
      "delete": {
        "tags": [""],
        "summary": "Admin delete a Review",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Delete a review"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The review ID not found"
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [""],
        "summary": "View mentorship session request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Request not found"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["user"],
        "summary": "Sign in a user",
        "description": "This is where you can signIn in a user",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signin"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "No User found"
          },
          "200": {
            "description": "User is successfully sign in"
          },
          "401": {
            "description": "Authentication failed, Invalid Email or Password"
          }
        }
      }
    },
    "/user/{id}": {
      "patch": {
        "tags": ["user"],
        "summary": "Admin change user to mentor",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "description": "Change User to mentor",
            "required": true
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User Id not found"
          },
          "409": {
            "description": "User already changed to mentor"
          },
          "200": {
            "description": "User account changed to mentor"
          }
        }
      }
    },
    "/mentors": {
      "get": {
        "tags": ["user"],
        "summary": "View all mentors",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "View Mentors"
          }
        }
      }
    },
    "/mentors/{id}": {
      "get": {
        "tags": ["user"],
        "summary": "View a specific mentor",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "in": "path",
            "name": "mentorId",
            "description": "View a specific mentor"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Mentor with the given ID does not exists"
          },
          "400": {
            "description": "The Given ID is not for a mentor"
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sessions/{id}/accept": {
      "patch": {
        "tags": ["user"],
        "summary": "Mentor accept mentorship request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "Change User to mentor"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "This request can not be accepted because was rejected before"
          },
          "404": {
            "description": "The given request session Id does not exists"
          },
          "409": {
            "description": "This request was made before"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "signup": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer"
        },
        "occupation": {
          "type": "string"
        },
        "expertise": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "birthdate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User Signup"
      }
    },
    "signin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User SignIn"
      }
    },
    "sessions": {
      "type": "object",
      "properties": {
        "mentorId": {
          "type": "integer"
        },
        "question": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Session"
      }
    },
    "mentors": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "Mentor"
      }
    }
  }
}
